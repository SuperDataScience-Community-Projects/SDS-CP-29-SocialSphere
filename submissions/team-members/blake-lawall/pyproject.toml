[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "social-sphere-analysis"
version = "0.1.0"
description = "Social Media Addiction Analysis Project with MLflow Integration"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["social media", "addiction", "machine learning", "data science", "mlflow"]
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "mlflow>=2.3.0",
    "hdbscan>=0.8.29",
    "matplotlib>=3.4.0",
    "seaborn>=0.11.0",
    "python-dotenv>=0.19.0",
    "joblib>=1.1.0",  # For model persistence
    "optuna>=3.0.0",  # For hyperparameter optimization
    "shap>=0.41.0",   # For model interpretability
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=3.0",  # For coverage reporting
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
    "mypy>=0.990",     # For type checking
    "pre-commit>=2.20" # For git hooks
]

docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.18"
]

[project.urls]
"Homepage" = "https://github.com/yourusername/social-sphere-analysis"
"Bug Tracker" = "https://github.com/yourusername/social-sphere-analysis/issues"

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/docs/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra -q --cov=src --cov-report=term-missing"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
] 